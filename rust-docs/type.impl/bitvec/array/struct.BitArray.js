(function() {
    var type_impls = Object.fromEntries([["ab_farmer_components",[["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-AsMut%3CBitSlice%3C%3CA+as+BitView%3E::Store,+O%3E%3E-for-BitArray%3CA,+O%3E\" class=\"impl\"><a href=\"#impl-AsMut%3CBitSlice%3C%3CA+as+BitView%3E::Store,+O%3E%3E-for-BitArray%3CA,+O%3E\" class=\"anchor\">ยง</a><h3 class=\"code-header\">impl&lt;A, O&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/convert/trait.AsMut.html\" title=\"trait core::convert::AsMut\">AsMut</a>&lt;BitSlice&lt;&lt;A as BitView&gt;::Store, O&gt;&gt; for BitArray&lt;A, O&gt;<div class=\"where\">where\n    A: BitViewSized,\n    O: BitOrder,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.as_mut\" class=\"method trait-impl\"><a href=\"#method.as_mut\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/convert/trait.AsMut.html#tymethod.as_mut\" class=\"fn\">as_mut</a>(&amp;mut self) -&gt; &amp;mut BitSlice&lt;&lt;A as BitView&gt;::Store, O&gt; <a href=\"#\" class=\"tooltip\" data-notable-ty=\"&amp;mut BitSlice&lt;&lt;A as BitView&gt;::Store, O&gt;\">โ</a></h4></section></summary><div class='docblock'>Converts this type into a mutable reference of the (usually inferred) input type.</div></details></div></details>","AsMut<BitSlice<<A as BitView>::Store, O>>","ab_farmer_components::sector::SingleRecordBitArray"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-AsRef%3CBitSlice%3C%3CA+as+BitView%3E::Store,+O%3E%3E-for-BitArray%3CA,+O%3E\" class=\"impl\"><a href=\"#impl-AsRef%3CBitSlice%3C%3CA+as+BitView%3E::Store,+O%3E%3E-for-BitArray%3CA,+O%3E\" class=\"anchor\">ยง</a><h3 class=\"code-header\">impl&lt;A, O&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/convert/trait.AsRef.html\" title=\"trait core::convert::AsRef\">AsRef</a>&lt;BitSlice&lt;&lt;A as BitView&gt;::Store, O&gt;&gt; for BitArray&lt;A, O&gt;<div class=\"where\">where\n    A: BitViewSized,\n    O: BitOrder,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.as_ref\" class=\"method trait-impl\"><a href=\"#method.as_ref\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/convert/trait.AsRef.html#tymethod.as_ref\" class=\"fn\">as_ref</a>(&amp;self) -&gt; &amp;BitSlice&lt;&lt;A as BitView&gt;::Store, O&gt; <a href=\"#\" class=\"tooltip\" data-notable-ty=\"&amp;BitSlice&lt;&lt;A as BitView&gt;::Store, O&gt;\">โ</a></h4></section></summary><div class='docblock'>Converts this type into a shared reference of the (usually inferred) input type.</div></details></div></details>","AsRef<BitSlice<<A as BitView>::Store, O>>","ab_farmer_components::sector::SingleRecordBitArray"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Binary-for-BitArray%3CA,+O%3E\" class=\"impl\"><a href=\"#impl-Binary-for-BitArray%3CA,+O%3E\" class=\"anchor\">ยง</a><h3 class=\"code-header\">impl&lt;A, O&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/fmt/trait.Binary.html\" title=\"trait core::fmt::Binary\">Binary</a> for BitArray&lt;A, O&gt;<div class=\"where\">where\n    O: BitOrder,\n    A: BitViewSized,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.fmt\" class=\"method trait-impl\"><a href=\"#method.fmt\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/fmt/trait.Binary.html#tymethod.fmt\" class=\"fn\">fmt</a>(&amp;self, fmt: &amp;mut <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/core/fmt/struct.Formatter.html\" title=\"struct core::fmt::Formatter\">Formatter</a>&lt;'_&gt;) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.unit.html\">()</a>, <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/core/fmt/struct.Error.html\" title=\"struct core::fmt::Error\">Error</a>&gt;</h4></section></summary><div class='docblock'>Formats the value using the given formatter. <a href=\"https://doc.rust-lang.org/nightly/core/fmt/trait.Binary.html#tymethod.fmt\">Read more</a></div></details></div></details>","Binary","ab_farmer_components::sector::SingleRecordBitArray"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-BitAnd%3CRhs%3E-for-BitArray%3CA,+O%3E\" class=\"impl\"><a href=\"#impl-BitAnd%3CRhs%3E-for-BitArray%3CA,+O%3E\" class=\"anchor\">ยง</a><h3 class=\"code-header\">impl&lt;A, O, Rhs&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/bit/trait.BitAnd.html\" title=\"trait core::ops::bit::BitAnd\">BitAnd</a>&lt;Rhs&gt; for BitArray&lt;A, O&gt;<div class=\"where\">where\n    A: BitViewSized,\n    O: BitOrder,\n    BitSlice&lt;&lt;A as BitView&gt;::Store, O&gt;: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/bit/trait.BitAndAssign.html\" title=\"trait core::ops::bit::BitAndAssign\">BitAndAssign</a>&lt;Rhs&gt;,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Output\" class=\"anchor\">ยง</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/nightly/core/ops/bit/trait.BitAnd.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = BitArray&lt;A, O&gt;</h4></section></summary><div class='docblock'>The resulting type after applying the <code>&amp;</code> operator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.bitand\" class=\"method trait-impl\"><a href=\"#method.bitand\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/ops/bit/trait.BitAnd.html#tymethod.bitand\" class=\"fn\">bitand</a>(self, rhs: Rhs) -&gt; &lt;BitArray&lt;A, O&gt; as <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/bit/trait.BitAnd.html\" title=\"trait core::ops::bit::BitAnd\">BitAnd</a>&lt;Rhs&gt;&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/nightly/core/ops/bit/trait.BitAnd.html#associatedtype.Output\" title=\"type core::ops::bit::BitAnd::Output\">Output</a></h4></section></summary><div class='docblock'>Performs the <code>&amp;</code> operation. <a href=\"https://doc.rust-lang.org/nightly/core/ops/bit/trait.BitAnd.html#tymethod.bitand\">Read more</a></div></details></div></details>","BitAnd<Rhs>","ab_farmer_components::sector::SingleRecordBitArray"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-BitAndAssign%3CRhs%3E-for-BitArray%3CA,+O%3E\" class=\"impl\"><a href=\"#impl-BitAndAssign%3CRhs%3E-for-BitArray%3CA,+O%3E\" class=\"anchor\">ยง</a><h3 class=\"code-header\">impl&lt;A, O, Rhs&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/bit/trait.BitAndAssign.html\" title=\"trait core::ops::bit::BitAndAssign\">BitAndAssign</a>&lt;Rhs&gt; for BitArray&lt;A, O&gt;<div class=\"where\">where\n    A: BitViewSized,\n    O: BitOrder,\n    BitSlice&lt;&lt;A as BitView&gt;::Store, O&gt;: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/bit/trait.BitAndAssign.html\" title=\"trait core::ops::bit::BitAndAssign\">BitAndAssign</a>&lt;Rhs&gt;,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.bitand_assign\" class=\"method trait-impl\"><a href=\"#method.bitand_assign\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/ops/bit/trait.BitAndAssign.html#tymethod.bitand_assign\" class=\"fn\">bitand_assign</a>(&amp;mut self, rhs: Rhs)</h4></section></summary><div class='docblock'>Performs the <code>&amp;=</code> operation. <a href=\"https://doc.rust-lang.org/nightly/core/ops/bit/trait.BitAndAssign.html#tymethod.bitand_assign\">Read more</a></div></details></div></details>","BitAndAssign<Rhs>","ab_farmer_components::sector::SingleRecordBitArray"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-BitArray%3CA,+O%3E\" class=\"impl\"><a href=\"#impl-BitArray%3CA,+O%3E\" class=\"anchor\">ยง</a><h3 class=\"code-header\">impl&lt;A, O&gt; BitArray&lt;A, O&gt;<div class=\"where\">where\n    A: BitViewSized,\n    O: BitOrder,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.as_slice\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">as_slice</a>(&amp;self) -&gt; &amp;BitSlice&lt;&lt;A as BitView&gt;::Store, O&gt; <a href=\"#\" class=\"tooltip\" data-notable-ty=\"&amp;BitSlice&lt;&lt;A as BitView&gt;::Store, O&gt;\">โ</a></h4></section><span class=\"item-info\"><div class=\"stab deprecated\"><span class=\"emoji\">๐</span><span>Deprecated: use <code>.as_bitslice()</code> or <code>.as_raw_slice()</code> instead</span></div></span></summary><div class=\"docblock\"><p>Returns a bit-slice containing the entire bit-array. Equivalent to\n<code>&amp;a[..]</code>.</p>\n<p>Because <code>BitArray</code> can be viewed as a slice of bits or as a slice of\nelements with equal ease, you should switch to using <a href=\"Self::as_bitslice\"><code>.as_bitslice()</code></a>\nor <a href=\"Self::as_raw_slice\"><code>.as_raw_slice()</code></a> to make your choice explicit.</p>\n<h6 id=\"original\"><a class=\"doc-anchor\" href=\"#original\">ยง</a>Original</h6>\n<p><a href=\"https://doc.rust-lang.org/std/primitive.array.html#method.as_slice\"><code>array::as_slice</code></a></p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.as_mut_slice\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">as_mut_slice</a>(&amp;mut self) -&gt; &amp;mut BitSlice&lt;&lt;A as BitView&gt;::Store, O&gt; <a href=\"#\" class=\"tooltip\" data-notable-ty=\"&amp;mut BitSlice&lt;&lt;A as BitView&gt;::Store, O&gt;\">โ</a></h4></section><span class=\"item-info\"><div class=\"stab deprecated\"><span class=\"emoji\">๐</span><span>Deprecated: use <code>.as_mut_bitslice()</code> or <code>.as_raw_mut_slice()</code> instead</span></div></span></summary><div class=\"docblock\"><p>Returns a mutable bit-slice containing the entire bit-array. Equivalent\nto <code>&amp;mut a[..]</code>.</p>\n<p>Because <code>BitArray</code> can be viewed as a slice of bits or as a slice of\nelements with equal ease, you should switch to using\n<a href=\"Self::as_mut_bitslice\"><code>.as_mut_bitslice()</code></a> or <a href=\"Self::as_raw_mut_slice\"><code>.as_raw_mut_slice()</code></a> to make your choice\nexplicit.</p>\n<h6 id=\"original-1\"><a class=\"doc-anchor\" href=\"#original-1\">ยง</a>Original</h6>\n<p><a href=\"https://doc.rust-lang.org/std/primitive.array.html#method.as_mut_slice\"><code>array::as_mut_slice</code></a></p>\n</div></details></div></details>",0,"ab_farmer_components::sector::SingleRecordBitArray"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-BitArray%3CA,+O%3E\" class=\"impl\"><a href=\"#impl-BitArray%3CA,+O%3E\" class=\"anchor\">ยง</a><h3 class=\"code-header\">impl&lt;A, O&gt; BitArray&lt;A, O&gt;<div class=\"where\">where\n    A: BitViewSized,\n    O: BitOrder,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedconstant.ZERO\" class=\"associatedconstant\"><h4 class=\"code-header\">pub const <a class=\"constant\">ZERO</a>: BitArray&lt;A, O&gt;</h4></section></summary><div class=\"docblock\"><p>A bit-array with all bits initialized to zero.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.new\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">new</a>(data: A) -&gt; BitArray&lt;A, O&gt;</h4></section></summary><div class=\"docblock\"><p>Wraps an existing buffer as a bit-array.</p>\n<h6 id=\"examples\"><a class=\"doc-anchor\" href=\"#examples\">ยง</a>Examples</h6>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">use </span>bitvec::prelude::<span class=\"kw-2\">*</span>;\n\n<span class=\"kw\">let </span>data = [<span class=\"number\">0u16</span>, <span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"number\">3</span>];\n<span class=\"kw\">let </span>bits = BitArray::&lt;<span class=\"kw\">_</span>, Msb0&gt;::new(data);\n<span class=\"macro\">assert_eq!</span>(bits.len(), <span class=\"number\">64</span>);</code></pre></div></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.into_inner\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">into_inner</a>(self) -&gt; A</h4></section></summary><div class=\"docblock\"><p>Removes the bit-array wrapper, returning the contained buffer.</p>\n<h6 id=\"examples-1\"><a class=\"doc-anchor\" href=\"#examples-1\">ยง</a>Examples</h6>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">use </span>bitvec::prelude::<span class=\"kw-2\">*</span>;\n\n<span class=\"kw\">let </span>bits = <span class=\"macro\">bitarr!</span>[<span class=\"number\">0</span>; <span class=\"number\">30</span>];\n<span class=\"kw\">let </span>native: [usize; <span class=\"number\">1</span>] = bits.into_inner();</code></pre></div></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.as_bitslice\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">as_bitslice</a>(&amp;self) -&gt; &amp;BitSlice&lt;&lt;A as BitView&gt;::Store, O&gt; <a href=\"#\" class=\"tooltip\" data-notable-ty=\"&amp;BitSlice&lt;&lt;A as BitView&gt;::Store, O&gt;\">โ</a></h4></section></summary><div class=\"docblock\"><p>Explicitly views the bit-array as a bit-slice.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.as_mut_bitslice\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">as_mut_bitslice</a>(&amp;mut self) -&gt; &amp;mut BitSlice&lt;&lt;A as BitView&gt;::Store, O&gt; <a href=\"#\" class=\"tooltip\" data-notable-ty=\"&amp;mut BitSlice&lt;&lt;A as BitView&gt;::Store, O&gt;\">โ</a></h4></section></summary><div class=\"docblock\"><p>Explicitly views the bit-array as a mutable bit-slice.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.as_raw_slice\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">as_raw_slice</a>(&amp;self) -&gt; &amp;[&lt;A as BitView&gt;::Store]</h4></section></summary><div class=\"docblock\"><p>Views the bit-array as a slice of its underlying memory elements.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.as_raw_mut_slice\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">as_raw_mut_slice</a>(&amp;mut self) -&gt; &amp;mut [&lt;A as BitView&gt;::Store]</h4></section></summary><div class=\"docblock\"><p>Views the bit-array as a mutable slice of its underlying memory\nelements.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.len\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">len</a>(&amp;self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a></h4></section></summary><div class=\"docblock\"><p>Gets the length (in bits) of the bit-array.</p>\n<p>This method is a compile-time constant.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.is_empty\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">is_empty</a>(&amp;self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a></h4></section></summary><div class=\"docblock\"><p>Tests whether the array is empty.</p>\n<p>This method is a compile-time constant.</p>\n</div></details></div></details>",0,"ab_farmer_components::sector::SingleRecordBitArray"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-BitField-for-BitArray%3CA,+O%3E\" class=\"impl\"><a href=\"#impl-BitField-for-BitArray%3CA,+O%3E\" class=\"anchor\">ยง</a><h3 class=\"code-header\">impl&lt;A, O&gt; BitField for BitArray&lt;A, O&gt;<div class=\"where\">where\n    O: BitOrder,\n    A: BitViewSized,\n    BitSlice&lt;&lt;A as BitView&gt;::Store, O&gt;: BitField,</div></h3><div class=\"docblock\"><h4 id=\"bit-array-implementation-of-bitfield\"><a class=\"doc-anchor\" href=\"#bit-array-implementation-of-bitfield\">ยง</a>Bit-Array Implementation of <code>BitField</code></h4>\n<p>The <code>BitArray</code> implementation is only ever called when the entire bit-array is\navailable for use, which means it can skip the bit-slice memory detection and\ninstead use the underlying storage elements directly.</p>\n</div></section></summary><div class=\"docblock\"><p>The implementation still performs the segmentation for each element contained in\nthe array, in order to maintain value consistency so that viewing the array as a\nbit-slice is still able to correctly interact with data contained in it.</p>\n</div><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.load_le\" class=\"method trait-impl\"><a href=\"#method.load_le\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a class=\"fn\">load_le</a>&lt;I&gt;(&amp;self) -&gt; I<div class=\"where\">where\n    I: Integral,</div></h4></section></summary><div class='docblock'>Little-Endian Integer Loading <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.load_be\" class=\"method trait-impl\"><a href=\"#method.load_be\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a class=\"fn\">load_be</a>&lt;I&gt;(&amp;self) -&gt; I<div class=\"where\">where\n    I: Integral,</div></h4></section></summary><div class='docblock'>Big-Endian Integer Loading <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.store_le\" class=\"method trait-impl\"><a href=\"#method.store_le\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a class=\"fn\">store_le</a>&lt;I&gt;(&amp;mut self, value: I)<div class=\"where\">where\n    I: Integral,</div></h4></section></summary><div class='docblock'>Little-Endian Integer Storing <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.store_be\" class=\"method trait-impl\"><a href=\"#method.store_be\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a class=\"fn\">store_be</a>&lt;I&gt;(&amp;mut self, value: I)<div class=\"where\">where\n    I: Integral,</div></h4></section></summary><div class='docblock'>Big-Endian Integer Storing <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.load\" class=\"method trait-impl\"><a href=\"#method.load\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a class=\"fn\">load</a>&lt;I&gt;(&amp;self) -&gt; I<div class=\"where\">where\n    I: Integral,</div></h4></section></summary><div class='docblock'>Integer Loading <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.store\" class=\"method trait-impl\"><a href=\"#method.store\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a class=\"fn\">store</a>&lt;I&gt;(&amp;mut self, value: I)<div class=\"where\">where\n    I: Integral,</div></h4></section></summary><div class='docblock'>Integer Storing <a>Read more</a></div></details></div></details>","BitField","ab_farmer_components::sector::SingleRecordBitArray"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-BitOr%3CRhs%3E-for-BitArray%3CA,+O%3E\" class=\"impl\"><a href=\"#impl-BitOr%3CRhs%3E-for-BitArray%3CA,+O%3E\" class=\"anchor\">ยง</a><h3 class=\"code-header\">impl&lt;A, O, Rhs&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/bit/trait.BitOr.html\" title=\"trait core::ops::bit::BitOr\">BitOr</a>&lt;Rhs&gt; for BitArray&lt;A, O&gt;<div class=\"where\">where\n    A: BitViewSized,\n    O: BitOrder,\n    BitSlice&lt;&lt;A as BitView&gt;::Store, O&gt;: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/bit/trait.BitOrAssign.html\" title=\"trait core::ops::bit::BitOrAssign\">BitOrAssign</a>&lt;Rhs&gt;,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Output\" class=\"anchor\">ยง</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/nightly/core/ops/bit/trait.BitOr.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = BitArray&lt;A, O&gt;</h4></section></summary><div class='docblock'>The resulting type after applying the <code>|</code> operator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.bitor\" class=\"method trait-impl\"><a href=\"#method.bitor\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/ops/bit/trait.BitOr.html#tymethod.bitor\" class=\"fn\">bitor</a>(self, rhs: Rhs) -&gt; &lt;BitArray&lt;A, O&gt; as <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/bit/trait.BitOr.html\" title=\"trait core::ops::bit::BitOr\">BitOr</a>&lt;Rhs&gt;&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/nightly/core/ops/bit/trait.BitOr.html#associatedtype.Output\" title=\"type core::ops::bit::BitOr::Output\">Output</a></h4></section></summary><div class='docblock'>Performs the <code>|</code> operation. <a href=\"https://doc.rust-lang.org/nightly/core/ops/bit/trait.BitOr.html#tymethod.bitor\">Read more</a></div></details></div></details>","BitOr<Rhs>","ab_farmer_components::sector::SingleRecordBitArray"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-BitOrAssign%3CRhs%3E-for-BitArray%3CA,+O%3E\" class=\"impl\"><a href=\"#impl-BitOrAssign%3CRhs%3E-for-BitArray%3CA,+O%3E\" class=\"anchor\">ยง</a><h3 class=\"code-header\">impl&lt;A, O, Rhs&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/bit/trait.BitOrAssign.html\" title=\"trait core::ops::bit::BitOrAssign\">BitOrAssign</a>&lt;Rhs&gt; for BitArray&lt;A, O&gt;<div class=\"where\">where\n    A: BitViewSized,\n    O: BitOrder,\n    BitSlice&lt;&lt;A as BitView&gt;::Store, O&gt;: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/bit/trait.BitOrAssign.html\" title=\"trait core::ops::bit::BitOrAssign\">BitOrAssign</a>&lt;Rhs&gt;,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.bitor_assign\" class=\"method trait-impl\"><a href=\"#method.bitor_assign\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/ops/bit/trait.BitOrAssign.html#tymethod.bitor_assign\" class=\"fn\">bitor_assign</a>(&amp;mut self, rhs: Rhs)</h4></section></summary><div class='docblock'>Performs the <code>|=</code> operation. <a href=\"https://doc.rust-lang.org/nightly/core/ops/bit/trait.BitOrAssign.html#tymethod.bitor_assign\">Read more</a></div></details></div></details>","BitOrAssign<Rhs>","ab_farmer_components::sector::SingleRecordBitArray"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-BitXor%3CRhs%3E-for-BitArray%3CA,+O%3E\" class=\"impl\"><a href=\"#impl-BitXor%3CRhs%3E-for-BitArray%3CA,+O%3E\" class=\"anchor\">ยง</a><h3 class=\"code-header\">impl&lt;A, O, Rhs&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/bit/trait.BitXor.html\" title=\"trait core::ops::bit::BitXor\">BitXor</a>&lt;Rhs&gt; for BitArray&lt;A, O&gt;<div class=\"where\">where\n    A: BitViewSized,\n    O: BitOrder,\n    BitSlice&lt;&lt;A as BitView&gt;::Store, O&gt;: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/bit/trait.BitXorAssign.html\" title=\"trait core::ops::bit::BitXorAssign\">BitXorAssign</a>&lt;Rhs&gt;,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Output\" class=\"anchor\">ยง</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/nightly/core/ops/bit/trait.BitXor.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = BitArray&lt;A, O&gt;</h4></section></summary><div class='docblock'>The resulting type after applying the <code>^</code> operator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.bitxor\" class=\"method trait-impl\"><a href=\"#method.bitxor\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/ops/bit/trait.BitXor.html#tymethod.bitxor\" class=\"fn\">bitxor</a>(self, rhs: Rhs) -&gt; &lt;BitArray&lt;A, O&gt; as <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/bit/trait.BitXor.html\" title=\"trait core::ops::bit::BitXor\">BitXor</a>&lt;Rhs&gt;&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/nightly/core/ops/bit/trait.BitXor.html#associatedtype.Output\" title=\"type core::ops::bit::BitXor::Output\">Output</a></h4></section></summary><div class='docblock'>Performs the <code>^</code> operation. <a href=\"https://doc.rust-lang.org/nightly/core/ops/bit/trait.BitXor.html#tymethod.bitxor\">Read more</a></div></details></div></details>","BitXor<Rhs>","ab_farmer_components::sector::SingleRecordBitArray"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-BitXorAssign%3CRhs%3E-for-BitArray%3CA,+O%3E\" class=\"impl\"><a href=\"#impl-BitXorAssign%3CRhs%3E-for-BitArray%3CA,+O%3E\" class=\"anchor\">ยง</a><h3 class=\"code-header\">impl&lt;A, O, Rhs&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/bit/trait.BitXorAssign.html\" title=\"trait core::ops::bit::BitXorAssign\">BitXorAssign</a>&lt;Rhs&gt; for BitArray&lt;A, O&gt;<div class=\"where\">where\n    A: BitViewSized,\n    O: BitOrder,\n    BitSlice&lt;&lt;A as BitView&gt;::Store, O&gt;: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/bit/trait.BitXorAssign.html\" title=\"trait core::ops::bit::BitXorAssign\">BitXorAssign</a>&lt;Rhs&gt;,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.bitxor_assign\" class=\"method trait-impl\"><a href=\"#method.bitxor_assign\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/ops/bit/trait.BitXorAssign.html#tymethod.bitxor_assign\" class=\"fn\">bitxor_assign</a>(&amp;mut self, rhs: Rhs)</h4></section></summary><div class='docblock'>Performs the <code>^=</code> operation. <a href=\"https://doc.rust-lang.org/nightly/core/ops/bit/trait.BitXorAssign.html#tymethod.bitxor_assign\">Read more</a></div></details></div></details>","BitXorAssign<Rhs>","ab_farmer_components::sector::SingleRecordBitArray"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Borrow%3CBitSlice%3C%3CA+as+BitView%3E::Store,+O%3E%3E-for-BitArray%3CA,+O%3E\" class=\"impl\"><a href=\"#impl-Borrow%3CBitSlice%3C%3CA+as+BitView%3E::Store,+O%3E%3E-for-BitArray%3CA,+O%3E\" class=\"anchor\">ยง</a><h3 class=\"code-header\">impl&lt;A, O&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/borrow/trait.Borrow.html\" title=\"trait core::borrow::Borrow\">Borrow</a>&lt;BitSlice&lt;&lt;A as BitView&gt;::Store, O&gt;&gt; for BitArray&lt;A, O&gt;<div class=\"where\">where\n    A: BitViewSized,\n    O: BitOrder,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.borrow\" class=\"method trait-impl\"><a href=\"#method.borrow\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/borrow/trait.Borrow.html#tymethod.borrow\" class=\"fn\">borrow</a>(&amp;self) -&gt; &amp;BitSlice&lt;&lt;A as BitView&gt;::Store, O&gt; <a href=\"#\" class=\"tooltip\" data-notable-ty=\"&amp;BitSlice&lt;&lt;A as BitView&gt;::Store, O&gt;\">โ</a></h4></section></summary><div class='docblock'>Immutably borrows from an owned value. <a href=\"https://doc.rust-lang.org/nightly/core/borrow/trait.Borrow.html#tymethod.borrow\">Read more</a></div></details></div></details>","Borrow<BitSlice<<A as BitView>::Store, O>>","ab_farmer_components::sector::SingleRecordBitArray"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-BorrowMut%3CBitSlice%3C%3CA+as+BitView%3E::Store,+O%3E%3E-for-BitArray%3CA,+O%3E\" class=\"impl\"><a href=\"#impl-BorrowMut%3CBitSlice%3C%3CA+as+BitView%3E::Store,+O%3E%3E-for-BitArray%3CA,+O%3E\" class=\"anchor\">ยง</a><h3 class=\"code-header\">impl&lt;A, O&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/borrow/trait.BorrowMut.html\" title=\"trait core::borrow::BorrowMut\">BorrowMut</a>&lt;BitSlice&lt;&lt;A as BitView&gt;::Store, O&gt;&gt; for BitArray&lt;A, O&gt;<div class=\"where\">where\n    A: BitViewSized,\n    O: BitOrder,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.borrow_mut\" class=\"method trait-impl\"><a href=\"#method.borrow_mut\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/borrow/trait.BorrowMut.html#tymethod.borrow_mut\" class=\"fn\">borrow_mut</a>(&amp;mut self) -&gt; &amp;mut BitSlice&lt;&lt;A as BitView&gt;::Store, O&gt; <a href=\"#\" class=\"tooltip\" data-notable-ty=\"&amp;mut BitSlice&lt;&lt;A as BitView&gt;::Store, O&gt;\">โ</a></h4></section></summary><div class='docblock'>Mutably borrows from an owned value. <a href=\"https://doc.rust-lang.org/nightly/core/borrow/trait.BorrowMut.html#tymethod.borrow_mut\">Read more</a></div></details></div></details>","BorrowMut<BitSlice<<A as BitView>::Store, O>>","ab_farmer_components::sector::SingleRecordBitArray"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Clone-for-BitArray%3CA,+O%3E\" class=\"impl\"><a href=\"#impl-Clone-for-BitArray%3CA,+O%3E\" class=\"anchor\">ยง</a><h3 class=\"code-header\">impl&lt;A, O&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a> for BitArray&lt;A, O&gt;<div class=\"where\">where\n    A: BitViewSized,\n    O: BitOrder,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.clone\" class=\"method trait-impl\"><a href=\"#method.clone\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html#tymethod.clone\" class=\"fn\">clone</a>(&amp;self) -&gt; BitArray&lt;A, O&gt;</h4></section></summary><div class='docblock'>Returns a duplicate of the value. <a href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html#tymethod.clone\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.clone_from\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> ยท <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/core/clone.rs.html#245-247\">Source</a></span><a href=\"#method.clone_from\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html#method.clone_from\" class=\"fn\">clone_from</a>(&amp;mut self, source: &amp;Self)</h4></section></summary><div class='docblock'>Performs copy-assignment from <code>source</code>. <a href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html#method.clone_from\">Read more</a></div></details></div></details>","Clone","ab_farmer_components::sector::SingleRecordBitArray"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Debug-for-BitArray%3CA,+O%3E\" class=\"impl\"><a href=\"#impl-Debug-for-BitArray%3CA,+O%3E\" class=\"anchor\">ยง</a><h3 class=\"code-header\">impl&lt;A, O&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/fmt/trait.Debug.html\" title=\"trait core::fmt::Debug\">Debug</a> for BitArray&lt;A, O&gt;<div class=\"where\">where\n    A: BitViewSized,\n    O: BitOrder,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.fmt\" class=\"method trait-impl\"><a href=\"#method.fmt\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/fmt/trait.Debug.html#tymethod.fmt\" class=\"fn\">fmt</a>(&amp;self, fmt: &amp;mut <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/core/fmt/struct.Formatter.html\" title=\"struct core::fmt::Formatter\">Formatter</a>&lt;'_&gt;) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.unit.html\">()</a>, <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/core/fmt/struct.Error.html\" title=\"struct core::fmt::Error\">Error</a>&gt;</h4></section></summary><div class='docblock'>Formats the value using the given formatter. <a href=\"https://doc.rust-lang.org/nightly/core/fmt/trait.Debug.html#tymethod.fmt\">Read more</a></div></details></div></details>","Debug","ab_farmer_components::sector::SingleRecordBitArray"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Default-for-BitArray%3CA,+O%3E\" class=\"impl\"><a href=\"#impl-Default-for-BitArray%3CA,+O%3E\" class=\"anchor\">ยง</a><h3 class=\"code-header\">impl&lt;A, O&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> for BitArray&lt;A, O&gt;<div class=\"where\">where\n    A: BitViewSized,\n    O: BitOrder,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.default\" class=\"method trait-impl\"><a href=\"#method.default\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/default/trait.Default.html#tymethod.default\" class=\"fn\">default</a>() -&gt; BitArray&lt;A, O&gt;</h4></section></summary><div class='docblock'>Returns the โdefault valueโ for a type. <a href=\"https://doc.rust-lang.org/nightly/core/default/trait.Default.html#tymethod.default\">Read more</a></div></details></div></details>","Default","ab_farmer_components::sector::SingleRecordBitArray"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Deref-for-BitArray%3CA,+O%3E\" class=\"impl\"><a href=\"#impl-Deref-for-BitArray%3CA,+O%3E\" class=\"anchor\">ยง</a><h3 class=\"code-header\">impl&lt;A, O&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/deref/trait.Deref.html\" title=\"trait core::ops::deref::Deref\">Deref</a> for BitArray&lt;A, O&gt;<div class=\"where\">where\n    A: BitViewSized,\n    O: BitOrder,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Target\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Target\" class=\"anchor\">ยง</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/nightly/core/ops/deref/trait.Deref.html#associatedtype.Target\" class=\"associatedtype\">Target</a> = BitSlice&lt;&lt;A as BitView&gt;::Store, O&gt;</h4></section></summary><div class='docblock'>The resulting type after dereferencing.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.deref\" class=\"method trait-impl\"><a href=\"#method.deref\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/ops/deref/trait.Deref.html#tymethod.deref\" class=\"fn\">deref</a>(&amp;self) -&gt; &amp;&lt;BitArray&lt;A, O&gt; as <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/deref/trait.Deref.html\" title=\"trait core::ops::deref::Deref\">Deref</a>&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/nightly/core/ops/deref/trait.Deref.html#associatedtype.Target\" title=\"type core::ops::deref::Deref::Target\">Target</a></h4></section></summary><div class='docblock'>Dereferences the value.</div></details></div></details>","Deref","ab_farmer_components::sector::SingleRecordBitArray"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-DerefMut-for-BitArray%3CA,+O%3E\" class=\"impl\"><a href=\"#impl-DerefMut-for-BitArray%3CA,+O%3E\" class=\"anchor\">ยง</a><h3 class=\"code-header\">impl&lt;A, O&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/deref/trait.DerefMut.html\" title=\"trait core::ops::deref::DerefMut\">DerefMut</a> for BitArray&lt;A, O&gt;<div class=\"where\">where\n    A: BitViewSized,\n    O: BitOrder,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.deref_mut\" class=\"method trait-impl\"><a href=\"#method.deref_mut\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/ops/deref/trait.DerefMut.html#tymethod.deref_mut\" class=\"fn\">deref_mut</a>(&amp;mut self) -&gt; &amp;mut &lt;BitArray&lt;A, O&gt; as <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/deref/trait.Deref.html\" title=\"trait core::ops::deref::Deref\">Deref</a>&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/nightly/core/ops/deref/trait.Deref.html#associatedtype.Target\" title=\"type core::ops::deref::Deref::Target\">Target</a></h4></section></summary><div class='docblock'>Mutably dereferences the value.</div></details></div></details>","DerefMut","ab_farmer_components::sector::SingleRecordBitArray"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Display-for-BitArray%3CA,+O%3E\" class=\"impl\"><a href=\"#impl-Display-for-BitArray%3CA,+O%3E\" class=\"anchor\">ยง</a><h3 class=\"code-header\">impl&lt;A, O&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/fmt/trait.Display.html\" title=\"trait core::fmt::Display\">Display</a> for BitArray&lt;A, O&gt;<div class=\"where\">where\n    O: BitOrder,\n    A: BitViewSized,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.fmt\" class=\"method trait-impl\"><a href=\"#method.fmt\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/fmt/trait.Display.html#tymethod.fmt\" class=\"fn\">fmt</a>(&amp;self, fmt: &amp;mut <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/core/fmt/struct.Formatter.html\" title=\"struct core::fmt::Formatter\">Formatter</a>&lt;'_&gt;) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.unit.html\">()</a>, <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/core/fmt/struct.Error.html\" title=\"struct core::fmt::Error\">Error</a>&gt;</h4></section></summary><div class='docblock'>Formats the value using the given formatter. <a href=\"https://doc.rust-lang.org/nightly/core/fmt/trait.Display.html#tymethod.fmt\">Read more</a></div></details></div></details>","Display","ab_farmer_components::sector::SingleRecordBitArray"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3CA%3E-for-BitArray%3CA,+O%3E\" class=\"impl\"><a href=\"#impl-From%3CA%3E-for-BitArray%3CA,+O%3E\" class=\"anchor\">ยง</a><h3 class=\"code-header\">impl&lt;A, O&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;A&gt; for BitArray&lt;A, O&gt;<div class=\"where\">where\n    A: BitViewSized,\n    O: BitOrder,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a href=\"#method.from\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/convert/trait.From.html#tymethod.from\" class=\"fn\">from</a>(data: A) -&gt; BitArray&lt;A, O&gt;</h4></section></summary><div class='docblock'>Converts to this type from the input type.</div></details></div></details>","From<A>","ab_farmer_components::sector::SingleRecordBitArray"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Hash-for-BitArray%3CA,+O%3E\" class=\"impl\"><a href=\"#impl-Hash-for-BitArray%3CA,+O%3E\" class=\"anchor\">ยง</a><h3 class=\"code-header\">impl&lt;A, O&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/hash/trait.Hash.html\" title=\"trait core::hash::Hash\">Hash</a> for BitArray&lt;A, O&gt;<div class=\"where\">where\n    A: BitViewSized,\n    O: BitOrder,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.hash\" class=\"method trait-impl\"><a href=\"#method.hash\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/hash/trait.Hash.html#tymethod.hash\" class=\"fn\">hash</a>&lt;H&gt;(&amp;self, hasher: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.reference.html\">&amp;mut H</a>)<div class=\"where\">where\n    H: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/hash/trait.Hasher.html\" title=\"trait core::hash::Hasher\">Hasher</a>,</div></h4></section></summary><div class='docblock'>Feeds this value into the given <a href=\"https://doc.rust-lang.org/nightly/core/hash/trait.Hasher.html\" title=\"trait core::hash::Hasher\"><code>Hasher</code></a>. <a href=\"https://doc.rust-lang.org/nightly/core/hash/trait.Hash.html#tymethod.hash\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.hash_slice\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.3.0\">1.3.0</span> ยท <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/core/hash/mod.rs.html#235-237\">Source</a></span><a href=\"#method.hash_slice\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/hash/trait.Hash.html#method.hash_slice\" class=\"fn\">hash_slice</a>&lt;H&gt;(data: &amp;[Self], state: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.reference.html\">&amp;mut H</a>)<div class=\"where\">where\n    H: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/hash/trait.Hasher.html\" title=\"trait core::hash::Hasher\">Hasher</a>,\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,</div></h4></section></summary><div class='docblock'>Feeds a slice of this type into the given <a href=\"https://doc.rust-lang.org/nightly/core/hash/trait.Hasher.html\" title=\"trait core::hash::Hasher\"><code>Hasher</code></a>. <a href=\"https://doc.rust-lang.org/nightly/core/hash/trait.Hash.html#method.hash_slice\">Read more</a></div></details></div></details>","Hash","ab_farmer_components::sector::SingleRecordBitArray"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Index%3CIdx%3E-for-BitArray%3CA,+O%3E\" class=\"impl\"><a href=\"#impl-Index%3CIdx%3E-for-BitArray%3CA,+O%3E\" class=\"anchor\">ยง</a><h3 class=\"code-header\">impl&lt;A, O, Idx&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/index/trait.Index.html\" title=\"trait core::ops::index::Index\">Index</a>&lt;Idx&gt; for BitArray&lt;A, O&gt;<div class=\"where\">where\n    A: BitViewSized,\n    O: BitOrder,\n    BitSlice&lt;&lt;A as BitView&gt;::Store, O&gt;: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/index/trait.Index.html\" title=\"trait core::ops::index::Index\">Index</a>&lt;Idx&gt;,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Output\" class=\"anchor\">ยง</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/nightly/core/ops/index/trait.Index.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = &lt;BitSlice&lt;&lt;A as BitView&gt;::Store, O&gt; as <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/index/trait.Index.html\" title=\"trait core::ops::index::Index\">Index</a>&lt;Idx&gt;&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/nightly/core/ops/index/trait.Index.html#associatedtype.Output\" title=\"type core::ops::index::Index::Output\">Output</a></h4></section></summary><div class='docblock'>The returned type after indexing.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.index\" class=\"method trait-impl\"><a href=\"#method.index\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/ops/index/trait.Index.html#tymethod.index\" class=\"fn\">index</a>(&amp;self, index: Idx) -&gt; &amp;&lt;BitArray&lt;A, O&gt; as <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/index/trait.Index.html\" title=\"trait core::ops::index::Index\">Index</a>&lt;Idx&gt;&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/nightly/core/ops/index/trait.Index.html#associatedtype.Output\" title=\"type core::ops::index::Index::Output\">Output</a></h4></section></summary><div class='docblock'>Performs the indexing (<code>container[index]</code>) operation. <a href=\"https://doc.rust-lang.org/nightly/core/ops/index/trait.Index.html#tymethod.index\">Read more</a></div></details></div></details>","Index<Idx>","ab_farmer_components::sector::SingleRecordBitArray"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-IndexMut%3CIdx%3E-for-BitArray%3CA,+O%3E\" class=\"impl\"><a href=\"#impl-IndexMut%3CIdx%3E-for-BitArray%3CA,+O%3E\" class=\"anchor\">ยง</a><h3 class=\"code-header\">impl&lt;A, O, Idx&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/index/trait.IndexMut.html\" title=\"trait core::ops::index::IndexMut\">IndexMut</a>&lt;Idx&gt; for BitArray&lt;A, O&gt;<div class=\"where\">where\n    A: BitViewSized,\n    O: BitOrder,\n    BitSlice&lt;&lt;A as BitView&gt;::Store, O&gt;: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/index/trait.IndexMut.html\" title=\"trait core::ops::index::IndexMut\">IndexMut</a>&lt;Idx&gt;,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.index_mut\" class=\"method trait-impl\"><a href=\"#method.index_mut\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/ops/index/trait.IndexMut.html#tymethod.index_mut\" class=\"fn\">index_mut</a>(\n    &amp;mut self,\n    index: Idx,\n) -&gt; &amp;mut &lt;BitArray&lt;A, O&gt; as <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/index/trait.Index.html\" title=\"trait core::ops::index::Index\">Index</a>&lt;Idx&gt;&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/nightly/core/ops/index/trait.Index.html#associatedtype.Output\" title=\"type core::ops::index::Index::Output\">Output</a></h4></section></summary><div class='docblock'>Performs the mutable indexing (<code>container[index]</code>) operation. <a href=\"https://doc.rust-lang.org/nightly/core/ops/index/trait.IndexMut.html#tymethod.index_mut\">Read more</a></div></details></div></details>","IndexMut<Idx>","ab_farmer_components::sector::SingleRecordBitArray"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-IntoIterator-for-BitArray%3CA,+O%3E\" class=\"impl\"><a href=\"#impl-IntoIterator-for-BitArray%3CA,+O%3E\" class=\"anchor\">ยง</a><h3 class=\"code-header\">impl&lt;A, O&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.IntoIterator.html\" title=\"trait core::iter::traits::collect::IntoIterator\">IntoIterator</a> for BitArray&lt;A, O&gt;<div class=\"where\">where\n    A: BitViewSized,\n    O: BitOrder,</div></h3><div class=\"docblock\"><p><a href=\"https://doc.rust-lang.org/std/primitive.array.html#impl-IntoIterator\">Original</a></p>\n</div></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.IntoIter\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.IntoIter\" class=\"anchor\">ยง</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.IntoIterator.html#associatedtype.IntoIter\" class=\"associatedtype\">IntoIter</a> = IntoIter&lt;A, O&gt;</h4></section></summary><div class='docblock'>Which kind of iterator are we turning this into?</div></details><details class=\"toggle\" open><summary><section id=\"associatedtype.Item\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Item\" class=\"anchor\">ยง</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.IntoIterator.html#associatedtype.Item\" class=\"associatedtype\">Item</a> = &lt;IntoIter&lt;A, O&gt; as <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/iterator/trait.Iterator.html\" title=\"trait core::iter::traits::iterator::Iterator\">Iterator</a>&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/iterator/trait.Iterator.html#associatedtype.Item\" title=\"type core::iter::traits::iterator::Iterator::Item\">Item</a></h4></section></summary><div class='docblock'>The type of the elements being iterated over.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.into_iter\" class=\"method trait-impl\"><a href=\"#method.into_iter\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.IntoIterator.html#tymethod.into_iter\" class=\"fn\">into_iter</a>(self) -&gt; &lt;BitArray&lt;A, O&gt; as <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.IntoIterator.html\" title=\"trait core::iter::traits::collect::IntoIterator\">IntoIterator</a>&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.IntoIterator.html#associatedtype.IntoIter\" title=\"type core::iter::traits::collect::IntoIterator::IntoIter\">IntoIter</a></h4></section></summary><div class='docblock'>Creates an iterator from a value. <a href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.IntoIterator.html#tymethod.into_iter\">Read more</a></div></details></div></details>","IntoIterator","ab_farmer_components::sector::SingleRecordBitArray"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-LowerHex-for-BitArray%3CA,+O%3E\" class=\"impl\"><a href=\"#impl-LowerHex-for-BitArray%3CA,+O%3E\" class=\"anchor\">ยง</a><h3 class=\"code-header\">impl&lt;A, O&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/fmt/trait.LowerHex.html\" title=\"trait core::fmt::LowerHex\">LowerHex</a> for BitArray&lt;A, O&gt;<div class=\"where\">where\n    O: BitOrder,\n    A: BitViewSized,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.fmt\" class=\"method trait-impl\"><a href=\"#method.fmt\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/fmt/trait.LowerHex.html#tymethod.fmt\" class=\"fn\">fmt</a>(&amp;self, fmt: &amp;mut <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/core/fmt/struct.Formatter.html\" title=\"struct core::fmt::Formatter\">Formatter</a>&lt;'_&gt;) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.unit.html\">()</a>, <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/core/fmt/struct.Error.html\" title=\"struct core::fmt::Error\">Error</a>&gt;</h4></section></summary><div class='docblock'>Formats the value using the given formatter. <a href=\"https://doc.rust-lang.org/nightly/core/fmt/trait.LowerHex.html#tymethod.fmt\">Read more</a></div></details></div></details>","LowerHex","ab_farmer_components::sector::SingleRecordBitArray"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Not-for-BitArray%3CA,+O%3E\" class=\"impl\"><a href=\"#impl-Not-for-BitArray%3CA,+O%3E\" class=\"anchor\">ยง</a><h3 class=\"code-header\">impl&lt;A, O&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/bit/trait.Not.html\" title=\"trait core::ops::bit::Not\">Not</a> for BitArray&lt;A, O&gt;<div class=\"where\">where\n    A: BitViewSized,\n    O: BitOrder,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Output\" class=\"anchor\">ยง</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/nightly/core/ops/bit/trait.Not.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = BitArray&lt;A, O&gt;</h4></section></summary><div class='docblock'>The resulting type after applying the <code>!</code> operator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.not\" class=\"method trait-impl\"><a href=\"#method.not\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/ops/bit/trait.Not.html#tymethod.not\" class=\"fn\">not</a>(self) -&gt; &lt;BitArray&lt;A, O&gt; as <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/bit/trait.Not.html\" title=\"trait core::ops::bit::Not\">Not</a>&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/nightly/core/ops/bit/trait.Not.html#associatedtype.Output\" title=\"type core::ops::bit::Not::Output\">Output</a></h4></section></summary><div class='docblock'>Performs the unary <code>!</code> operation. <a href=\"https://doc.rust-lang.org/nightly/core/ops/bit/trait.Not.html#tymethod.not\">Read more</a></div></details></div></details>","Not","ab_farmer_components::sector::SingleRecordBitArray"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Octal-for-BitArray%3CA,+O%3E\" class=\"impl\"><a href=\"#impl-Octal-for-BitArray%3CA,+O%3E\" class=\"anchor\">ยง</a><h3 class=\"code-header\">impl&lt;A, O&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/fmt/trait.Octal.html\" title=\"trait core::fmt::Octal\">Octal</a> for BitArray&lt;A, O&gt;<div class=\"where\">where\n    O: BitOrder,\n    A: BitViewSized,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.fmt\" class=\"method trait-impl\"><a href=\"#method.fmt\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/fmt/trait.Octal.html#tymethod.fmt\" class=\"fn\">fmt</a>(&amp;self, fmt: &amp;mut <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/core/fmt/struct.Formatter.html\" title=\"struct core::fmt::Formatter\">Formatter</a>&lt;'_&gt;) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.unit.html\">()</a>, <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/core/fmt/struct.Error.html\" title=\"struct core::fmt::Error\">Error</a>&gt;</h4></section></summary><div class='docblock'>Formats the value using the given formatter. <a href=\"https://doc.rust-lang.org/nightly/core/fmt/trait.Octal.html#tymethod.fmt\">Read more</a></div></details></div></details>","Octal","ab_farmer_components::sector::SingleRecordBitArray"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Ord-for-BitArray%3CA,+O%3E\" class=\"impl\"><a href=\"#impl-Ord-for-BitArray%3CA,+O%3E\" class=\"anchor\">ยง</a><h3 class=\"code-header\">impl&lt;A, O&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.Ord.html\" title=\"trait core::cmp::Ord\">Ord</a> for BitArray&lt;A, O&gt;<div class=\"where\">where\n    A: BitViewSized,\n    O: BitOrder,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.cmp\" class=\"method trait-impl\"><a href=\"#method.cmp\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.Ord.html#tymethod.cmp\" class=\"fn\">cmp</a>(&amp;self, other: &amp;BitArray&lt;A, O&gt;) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/cmp/enum.Ordering.html\" title=\"enum core::cmp::Ordering\">Ordering</a></h4></section></summary><div class='docblock'>This method returns an <a href=\"https://doc.rust-lang.org/nightly/core/cmp/enum.Ordering.html\" title=\"enum core::cmp::Ordering\"><code>Ordering</code></a> between <code>self</code> and <code>other</code>. <a href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.Ord.html#tymethod.cmp\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.max\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.21.0\">1.21.0</span> ยท <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/core/cmp.rs.html#1021-1023\">Source</a></span><a href=\"#method.max\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.Ord.html#method.max\" class=\"fn\">max</a>(self, other: Self) -&gt; Self<div class=\"where\">where\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,</div></h4></section></summary><div class='docblock'>Compares and returns the maximum of two values. <a href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.Ord.html#method.max\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.min\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.21.0\">1.21.0</span> ยท <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/core/cmp.rs.html#1060-1062\">Source</a></span><a href=\"#method.min\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.Ord.html#method.min\" class=\"fn\">min</a>(self, other: Self) -&gt; Self<div class=\"where\">where\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,</div></h4></section></summary><div class='docblock'>Compares and returns the minimum of two values. <a href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.Ord.html#method.min\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.clamp\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.50.0\">1.50.0</span> ยท <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/core/cmp.rs.html#1086-1088\">Source</a></span><a href=\"#method.clamp\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.Ord.html#method.clamp\" class=\"fn\">clamp</a>(self, min: Self, max: Self) -&gt; Self<div class=\"where\">where\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,</div></h4></section></summary><div class='docblock'>Restrict a value to a certain interval. <a href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.Ord.html#method.clamp\">Read more</a></div></details></div></details>","Ord","ab_farmer_components::sector::SingleRecordBitArray"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-PartialEq%3CRhs%3E-for-BitArray%3CA,+O%3E\" class=\"impl\"><a href=\"#impl-PartialEq%3CRhs%3E-for-BitArray%3CA,+O%3E\" class=\"anchor\">ยง</a><h3 class=\"code-header\">impl&lt;A, O, Rhs&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.PartialEq.html\" title=\"trait core::cmp::PartialEq\">PartialEq</a>&lt;Rhs&gt; for BitArray&lt;A, O&gt;<div class=\"where\">where\n    A: BitViewSized,\n    O: BitOrder,\n    BitSlice&lt;&lt;A as BitView&gt;::Store, O&gt;: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.PartialEq.html\" title=\"trait core::cmp::PartialEq\">PartialEq</a>&lt;Rhs&gt;,\n    Rhs: ?<a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.eq\" class=\"method trait-impl\"><a href=\"#method.eq\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.PartialEq.html#tymethod.eq\" class=\"fn\">eq</a>(&amp;self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.reference.html\">&amp;Rhs</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Tests for <code>self</code> and <code>other</code> values to be equal, and is used by <code>==</code>.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.ne\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> ยท <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/core/cmp.rs.html#264\">Source</a></span><a href=\"#method.ne\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.PartialEq.html#method.ne\" class=\"fn\">ne</a>(&amp;self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.reference.html\">&amp;Rhs</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Tests for <code>!=</code>. The default implementation is almost always sufficient,\nand should not be overridden without very good reason.</div></details></div></details>","PartialEq<Rhs>","ab_farmer_components::sector::SingleRecordBitArray"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-PartialOrd%3CRhs%3E-for-BitArray%3CA,+O%3E\" class=\"impl\"><a href=\"#impl-PartialOrd%3CRhs%3E-for-BitArray%3CA,+O%3E\" class=\"anchor\">ยง</a><h3 class=\"code-header\">impl&lt;A, O, Rhs&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.PartialOrd.html\" title=\"trait core::cmp::PartialOrd\">PartialOrd</a>&lt;Rhs&gt; for BitArray&lt;A, O&gt;<div class=\"where\">where\n    A: BitViewSized,\n    O: BitOrder,\n    BitSlice&lt;&lt;A as BitView&gt;::Store, O&gt;: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.PartialOrd.html\" title=\"trait core::cmp::PartialOrd\">PartialOrd</a>&lt;Rhs&gt;,\n    Rhs: ?<a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.partial_cmp\" class=\"method trait-impl\"><a href=\"#method.partial_cmp\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.PartialOrd.html#tymethod.partial_cmp\" class=\"fn\">partial_cmp</a>(&amp;self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.reference.html\">&amp;Rhs</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/cmp/enum.Ordering.html\" title=\"enum core::cmp::Ordering\">Ordering</a>&gt;</h4></section></summary><div class='docblock'>This method returns an ordering between <code>self</code> and <code>other</code> values if one exists. <a href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.PartialOrd.html#tymethod.partial_cmp\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.lt\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> ยท <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/core/cmp.rs.html#1398\">Source</a></span><a href=\"#method.lt\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.PartialOrd.html#method.lt\" class=\"fn\">lt</a>(&amp;self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.reference.html\">&amp;Rhs</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Tests less than (for <code>self</code> and <code>other</code>) and is used by the <code>&lt;</code> operator. <a href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.PartialOrd.html#method.lt\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.le\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> ยท <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/core/cmp.rs.html#1416\">Source</a></span><a href=\"#method.le\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.PartialOrd.html#method.le\" class=\"fn\">le</a>(&amp;self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.reference.html\">&amp;Rhs</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Tests less than or equal to (for <code>self</code> and <code>other</code>) and is used by the\n<code>&lt;=</code> operator. <a href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.PartialOrd.html#method.le\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.gt\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> ยท <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/core/cmp.rs.html#1434\">Source</a></span><a href=\"#method.gt\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.PartialOrd.html#method.gt\" class=\"fn\">gt</a>(&amp;self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.reference.html\">&amp;Rhs</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Tests greater than (for <code>self</code> and <code>other</code>) and is used by the <code>&gt;</code>\noperator. <a href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.PartialOrd.html#method.gt\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.ge\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> ยท <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/core/cmp.rs.html#1452\">Source</a></span><a href=\"#method.ge\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.PartialOrd.html#method.ge\" class=\"fn\">ge</a>(&amp;self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.reference.html\">&amp;Rhs</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Tests greater than or equal to (for <code>self</code> and <code>other</code>) and is used by\nthe <code>&gt;=</code> operator. <a href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.PartialOrd.html#method.ge\">Read more</a></div></details></div></details>","PartialOrd<Rhs>","ab_farmer_components::sector::SingleRecordBitArray"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-TryFrom%3C%26BitSlice%3C%3CA+as+BitView%3E::Store,+O%3E%3E-for-BitArray%3CA,+O%3E\" class=\"impl\"><a href=\"#impl-TryFrom%3C%26BitSlice%3C%3CA+as+BitView%3E::Store,+O%3E%3E-for-BitArray%3CA,+O%3E\" class=\"anchor\">ยง</a><h3 class=\"code-header\">impl&lt;A, O&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/convert/trait.TryFrom.html\" title=\"trait core::convert::TryFrom\">TryFrom</a>&lt;&amp;BitSlice&lt;&lt;A as BitView&gt;::Store, O&gt;&gt; for BitArray&lt;A, O&gt;<div class=\"where\">where\n    A: BitViewSized,\n    O: BitOrder,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Error\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Error\" class=\"anchor\">ยง</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/nightly/core/convert/trait.TryFrom.html#associatedtype.Error\" class=\"associatedtype\">Error</a> = TryFromBitSliceError</h4></section></summary><div class='docblock'>The type returned in the event of a conversion error.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_from\" class=\"method trait-impl\"><a href=\"#method.try_from\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/convert/trait.TryFrom.html#tymethod.try_from\" class=\"fn\">try_from</a>(\n    src: &amp;BitSlice&lt;&lt;A as BitView&gt;::Store, O&gt;,\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;BitArray&lt;A, O&gt;, &lt;BitArray&lt;A, O&gt; as <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/convert/trait.TryFrom.html\" title=\"trait core::convert::TryFrom\">TryFrom</a>&lt;&amp;BitSlice&lt;&lt;A as BitView&gt;::Store, O&gt;&gt;&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/nightly/core/convert/trait.TryFrom.html#associatedtype.Error\" title=\"type core::convert::TryFrom::Error\">Error</a>&gt;</h4></section></summary><div class='docblock'>Performs the conversion.</div></details></div></details>","TryFrom<&BitSlice<<A as BitView>::Store, O>>","ab_farmer_components::sector::SingleRecordBitArray"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-UpperHex-for-BitArray%3CA,+O%3E\" class=\"impl\"><a href=\"#impl-UpperHex-for-BitArray%3CA,+O%3E\" class=\"anchor\">ยง</a><h3 class=\"code-header\">impl&lt;A, O&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/fmt/trait.UpperHex.html\" title=\"trait core::fmt::UpperHex\">UpperHex</a> for BitArray&lt;A, O&gt;<div class=\"where\">where\n    O: BitOrder,\n    A: BitViewSized,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.fmt\" class=\"method trait-impl\"><a href=\"#method.fmt\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/fmt/trait.UpperHex.html#tymethod.fmt\" class=\"fn\">fmt</a>(&amp;self, fmt: &amp;mut <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/core/fmt/struct.Formatter.html\" title=\"struct core::fmt::Formatter\">Formatter</a>&lt;'_&gt;) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.unit.html\">()</a>, <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/core/fmt/struct.Error.html\" title=\"struct core::fmt::Error\">Error</a>&gt;</h4></section></summary><div class='docblock'>Formats the value using the given formatter. <a href=\"https://doc.rust-lang.org/nightly/core/fmt/trait.UpperHex.html#tymethod.fmt\">Read more</a></div></details></div></details>","UpperHex","ab_farmer_components::sector::SingleRecordBitArray"],["<section id=\"impl-Copy-for-BitArray%3CA,+O%3E\" class=\"impl\"><a href=\"#impl-Copy-for-BitArray%3CA,+O%3E\" class=\"anchor\">ยง</a><h3 class=\"code-header\">impl&lt;A, O&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Copy.html\" title=\"trait core::marker::Copy\">Copy</a> for BitArray&lt;A, O&gt;<div class=\"where\">where\n    O: BitOrder,\n    A: BitViewSized + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Copy.html\" title=\"trait core::marker::Copy\">Copy</a>,</div></h3></section>","Copy","ab_farmer_components::sector::SingleRecordBitArray"],["<section id=\"impl-Eq-for-BitArray%3CA,+O%3E\" class=\"impl\"><a href=\"#impl-Eq-for-BitArray%3CA,+O%3E\" class=\"anchor\">ยง</a><h3 class=\"code-header\">impl&lt;A, O&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.Eq.html\" title=\"trait core::cmp::Eq\">Eq</a> for BitArray&lt;A, O&gt;<div class=\"where\">where\n    A: BitViewSized,\n    O: BitOrder,</div></h3></section>","Eq","ab_farmer_components::sector::SingleRecordBitArray"],["<section id=\"impl-Unpin-for-BitArray%3CA,+O%3E\" class=\"impl\"><a href=\"#impl-Unpin-for-BitArray%3CA,+O%3E\" class=\"anchor\">ยง</a><h3 class=\"code-header\">impl&lt;A, O&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Unpin.html\" title=\"trait core::marker::Unpin\">Unpin</a> for BitArray&lt;A, O&gt;<div class=\"where\">where\n    A: BitViewSized,\n    O: BitOrder,</div></h3></section>","Unpin","ab_farmer_components::sector::SingleRecordBitArray"]]]]);
    if (window.register_type_impls) {
        window.register_type_impls(type_impls);
    } else {
        window.pending_type_impls = type_impls;
    }
})()
//{"start":55,"fragment_lengths":[75780]}