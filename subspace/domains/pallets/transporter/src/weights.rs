
//! Autogenerated weights for pallet_transporter
//!
//! THIS FILE WAS AUTO-GENERATED USING THE SUBSTRATE BENCHMARK CLI VERSION 42.0.0
//! DATE: 2024-09-06, STEPS: `50`, REPEAT: `20`, LOW RANGE: `[]`, HIGH RANGE: `[]`
//! WORST CASE MAP SIZE: `1000000`
//! HOSTNAME: `Ubuntu-2404-noble-amd64-base`, CPU: `Intel(R) Core(TM) i7-6700 CPU @ 3.40GHz`
//! EXECUTION: , WASM-EXECUTION: Compiled, CHAIN: None, DB CACHE: 1024

// Executed Command:
// ./target/release/subspace-node
// benchmark
// pallet
// --runtime=./target/release/wbuild/subspace-runtime/subspace_runtime.compact.compressed.wasm
// --genesis-builder=runtime
// --steps=50
// --repeat=20
// --pallet=pallet_transporter
// --extrinsic=*
// --wasm-execution=compiled
// --heap-pages=4096
// --output=./weights/pallet-transporter.rs
// --template=./frame-weight-template.hbs

#![cfg_attr(rustfmt, rustfmt_skip)]
#![allow(unused_parens)]
#![allow(unused_imports)]

use frame_support::{traits::Get, weights::{Weight, constants::ParityDbWeight}};
use core::marker::PhantomData;

/// Weight functions needed for pallet_transporter.
pub trait WeightInfo {
	fn transfer() -> Weight;
	fn message() -> Weight;
	fn message_response() -> Weight;
}

/// Weights for pallet_transporter using the Substrate node and recommended hardware.
pub struct SubstrateWeight<T>(PhantomData<T>);
impl<T: frame_system::Config> WeightInfo for SubstrateWeight<T> {
	/// Storage: `System::Account` (r:1 w:1)
	/// Proof: `System::Account` (`max_values`: None, `max_size`: Some(128), added: 2603, mode: `MaxEncodedLen`)
	/// Storage: `Messenger::ChainAllowlist` (r:1 w:0)
	/// Proof: `Messenger::ChainAllowlist` (`max_values`: Some(1), `max_size`: None, mode: `Measured`)
	/// Storage: `Messenger::NextChannelId` (r:1 w:0)
	/// Proof: `Messenger::NextChannelId` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// Storage: `Messenger::Channels` (r:1 w:1)
	/// Proof: `Messenger::Channels` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// Storage: `Messenger::CounterForOutbox` (r:1 w:1)
	/// Proof: `Messenger::CounterForOutbox` (`max_values`: Some(1), `max_size`: Some(4), added: 499, mode: `MaxEncodedLen`)
	/// Storage: `Messenger::Outbox` (r:1 w:1)
	/// Proof: `Messenger::Outbox` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// Storage: `Messenger::MessageWeightTags` (r:1 w:1)
	/// Proof: `Messenger::MessageWeightTags` (`max_values`: Some(1), `max_size`: None, mode: `Measured`)
	/// Storage: `Transporter::UnconfirmedTransfers` (r:1 w:1)
	/// Proof: `Transporter::UnconfirmedTransfers` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// Storage: `Messenger::OutboxFee` (r:0 w:1)
	/// Proof: `Messenger::OutboxFee` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// Storage: `Transporter::OutgoingTransfers` (r:0 w:1)
	/// Proof: `Transporter::OutgoingTransfers` (`max_values`: None, `max_size`: None, mode: `Measured`)
	fn transfer() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `302`
		//  Estimated: `3767`
		// Minimum execution time: 84_975_000 picoseconds.
		Weight::from_parts(86_029_000, 3767)
			.saturating_add(T::DbWeight::get().reads(8_u64))
			.saturating_add(T::DbWeight::get().writes(8_u64))
	}
	/// Storage: `System::Account` (r:1 w:0)
	/// Proof: `System::Account` (`max_values`: None, `max_size`: Some(128), added: 2603, mode: `MaxEncodedLen`)
	/// Storage: `Transporter::UnconfirmedTransfers` (r:1 w:1)
	/// Proof: `Transporter::UnconfirmedTransfers` (`max_values`: None, `max_size`: None, mode: `Measured`)
	fn message() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `26`
		//  Estimated: `3593`
		// Minimum execution time: 13_438_000 picoseconds.
		Weight::from_parts(13_671_000, 3593)
			.saturating_add(T::DbWeight::get().reads(2_u64))
			.saturating_add(T::DbWeight::get().writes(1_u64))
	}
	/// Storage: `Transporter::OutgoingTransfers` (r:1 w:1)
	/// Proof: `Transporter::OutgoingTransfers` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// Storage: `System::Account` (r:1 w:0)
	/// Proof: `System::Account` (`max_values`: None, `max_size`: Some(128), added: 2603, mode: `MaxEncodedLen`)
	/// Storage: `Transporter::CancelledTransfers` (r:1 w:1)
	/// Proof: `Transporter::CancelledTransfers` (`max_values`: None, `max_size`: None, mode: `Measured`)
	fn message_response() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `212`
		//  Estimated: `3677`
		// Minimum execution time: 20_728_000 picoseconds.
		Weight::from_parts(21_281_000, 3677)
			.saturating_add(T::DbWeight::get().reads(3_u64))
			.saturating_add(T::DbWeight::get().writes(2_u64))
	}
}

// For backwards compatibility and tests
impl WeightInfo for () {
	/// Storage: `System::Account` (r:1 w:1)
	/// Proof: `System::Account` (`max_values`: None, `max_size`: Some(128), added: 2603, mode: `MaxEncodedLen`)
	/// Storage: `Messenger::ChainAllowlist` (r:1 w:0)
	/// Proof: `Messenger::ChainAllowlist` (`max_values`: Some(1), `max_size`: None, mode: `Measured`)
	/// Storage: `Messenger::NextChannelId` (r:1 w:0)
	/// Proof: `Messenger::NextChannelId` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// Storage: `Messenger::Channels` (r:1 w:1)
	/// Proof: `Messenger::Channels` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// Storage: `Messenger::CounterForOutbox` (r:1 w:1)
	/// Proof: `Messenger::CounterForOutbox` (`max_values`: Some(1), `max_size`: Some(4), added: 499, mode: `MaxEncodedLen`)
	/// Storage: `Messenger::Outbox` (r:1 w:1)
	/// Proof: `Messenger::Outbox` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// Storage: `Messenger::MessageWeightTags` (r:1 w:1)
	/// Proof: `Messenger::MessageWeightTags` (`max_values`: Some(1), `max_size`: None, mode: `Measured`)
	/// Storage: `Transporter::UnconfirmedTransfers` (r:1 w:1)
	/// Proof: `Transporter::UnconfirmedTransfers` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// Storage: `Messenger::OutboxFee` (r:0 w:1)
	/// Proof: `Messenger::OutboxFee` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// Storage: `Transporter::OutgoingTransfers` (r:0 w:1)
	/// Proof: `Transporter::OutgoingTransfers` (`max_values`: None, `max_size`: None, mode: `Measured`)
	fn transfer() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `302`
		//  Estimated: `3767`
		// Minimum execution time: 84_975_000 picoseconds.
		Weight::from_parts(86_029_000, 3767)
			.saturating_add(ParityDbWeight::get().reads(8_u64))
			.saturating_add(ParityDbWeight::get().writes(8_u64))
	}
	/// Storage: `System::Account` (r:1 w:0)
	/// Proof: `System::Account` (`max_values`: None, `max_size`: Some(128), added: 2603, mode: `MaxEncodedLen`)
	/// Storage: `Transporter::UnconfirmedTransfers` (r:1 w:1)
	/// Proof: `Transporter::UnconfirmedTransfers` (`max_values`: None, `max_size`: None, mode: `Measured`)
	fn message() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `26`
		//  Estimated: `3593`
		// Minimum execution time: 13_438_000 picoseconds.
		Weight::from_parts(13_671_000, 3593)
			.saturating_add(ParityDbWeight::get().reads(2_u64))
			.saturating_add(ParityDbWeight::get().writes(1_u64))
	}
	/// Storage: `Transporter::OutgoingTransfers` (r:1 w:1)
	/// Proof: `Transporter::OutgoingTransfers` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// Storage: `System::Account` (r:1 w:0)
	/// Proof: `System::Account` (`max_values`: None, `max_size`: Some(128), added: 2603, mode: `MaxEncodedLen`)
	/// Storage: `Transporter::CancelledTransfers` (r:1 w:1)
	/// Proof: `Transporter::CancelledTransfers` (`max_values`: None, `max_size`: None, mode: `Measured`)
	fn message_response() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `212`
		//  Estimated: `3677`
		// Minimum execution time: 20_728_000 picoseconds.
		Weight::from_parts(21_281_000, 3677)
			.saturating_add(ParityDbWeight::get().reads(3_u64))
			.saturating_add(ParityDbWeight::get().writes(2_u64))
	}
}
